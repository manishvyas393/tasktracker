{"remainingRequest":"/home/manish/myfirstapp/node_modules/babel-loader/lib/index.js!/home/manish/myfirstapp/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/manish/myfirstapp/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/manish/myfirstapp/src/App.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/manish/myfirstapp/src/App.vue","mtime":1630319001547},{"path":"/home/manish/myfirstapp/node_modules/cache-loader/dist/cjs.js","mtime":1630177130320},{"path":"/home/manish/myfirstapp/node_modules/babel-loader/lib/index.js","mtime":1630177121489},{"path":"/home/manish/myfirstapp/node_modules/cache-loader/dist/cjs.js","mtime":1630177130320},{"path":"/home/manish/myfirstapp/node_modules/vue-loader-v16/dist/index.js","mtime":1630177128236}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/manish/myfirstapp/src/App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"container\">\n    <Header @toggle-add-task=\"toggleTask()\" :show=\"show\" />\n    <div v-show=\"show\">\n      <AddTask @add-task=\"addtask\" />\n    </div>\n\n    <Tasks\n      @togleReminder=\"TogleReminder\"\n      @delete-task=\"deleteTask\"\n      :tasks=\"tasks\"\n    />\n  </div>\n</template>\n\n<script>\nimport Header from \"./components/header\";\nimport AddTask from \"./components/addtask\";\nimport Tasks from \"./components/tasks\";\nexport default {\n  name: \"App\",\n  components: {\n    Header,\n    Tasks,\n    AddTask,\n  },\n  data() {\n    return {\n      tasks: [],\n      show: false,\n    };\n  },\n  methods: {\n    toggleTask() {\n      this.show = !this.show;\n    },\n\n    async addtask(task) {\n      const res = await fetch(\"api/tasks\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify(task),\n      });\n      const data = await res.json();\n      this.tasks = [...this.tasks, data];\n    },\n\n    async deleteTask(id) {\n      if (confirm(\"are you sure?\")) {\n        const res = await fetch(`api/tasks/${id}`, {\n          method: \"DELETE\",\n        });\n        res.status === 200\n          ? (this.tasks = this.tasks.filter((task) => task.id !== id))\n          : alert(\"eror\");\n      }\n    },\n\n    async TogleReminder(id) {\n      const taskToTogle = await this.fetchTask(id);\n      const updTask = { ...taskToTogle, reminder: !taskToTogle.reminder };\n\n      const res = await fetch(`api/tasks/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify(updTask),\n      });\n      const data = await res.json();\n\n      this.tasks = this.tasks.map((task) =>\n        task.id === id ? { ...task, reminder: !data.reminder } : task\n      );\n    },\n\n    async fetchTasks() {\n      const res = await fetch(\"api/tasks\");\n      const data = await res.json();\n      return data;\n    },\n    \n    async fetchTask(id) {\n      const res = await fetch(`api/tasks/${id}`);\n      const data = await res.json();\n      return data;\n    },\n  },\n\n  async created() {\n    this.tasks = await this.fetchTasks();\n  },\n};\n</script>\n<style>\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\nbody {\n  font-family: poppins;\n}\n.fas {\n  color: red;\n}\n.container {\n  max-width: 500px;\n  margin: 30px auto;\n  overflow: auto;\n  min-height: 300px;\n  border: 1px solid black;\n  padding: 30px;\n  border-radius: 5px;\n  background-color: rgb(233, 233, 233);\n}\n.btn {\n  color: white;\n  background-color: black;\n  padding: 8px;\n  border: none;\n  border-radius: 10px;\n  text-transform: capitalize;\n  font-size: 14px;\n  font: bold;\n}\n.task {\n  margin: 10px 20px;\n  background: rgb(179, 175, 175);\n  padding: 10px 5px;\n  cursor: pointer;\n  display: flex;\n  text-transform: capitalize;\n  justify-content: space-between;\n}\n.reminder {\n  border-left: 5px solid blue;\n}\n</style>\n"],"sourceRoot":""}]}